// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ettuschema = ettuschema || {};

/**
 * Commodity is a type of item that can be traded within the game. At the moment,
 * the categories are small enough I decided to just enumerate them right here.
 *
 * @constructor
 */
ettuschema.Commodity = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.Commodity}
 */
ettuschema.Commodity.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Commodity=} obj
 * @returns {ettuschema.Commodity}
 */
ettuschema.Commodity.getRootAsCommodity = function(bb, obj) {
  return (obj || new ettuschema.Commodity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Commodity=} obj
 * @returns {ettuschema.Commodity}
 */
ettuschema.Commodity.getSizePrefixedRootAsCommodity = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ettuschema.Commodity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * Elite Dangerous' internal ID for the commodity acts as the key.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Commodity.prototype.commodityId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.mutate_commodity_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * Name can be localized as long as the English name is preserved for hashing.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Commodity.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * What type of item is this.
 *
 * @returns {ettuschema.CommodityType}
 */
ettuschema.Commodity.prototype.categoryId = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {ettuschema.CommodityType} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.CommodityType.None;
};

/**
 * @param {ettuschema.CommodityType} value
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.mutate_category_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Whether the item is known to be rare.
 *
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.isRare = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.mutate_is_rare = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Whether the item is known to be marketable.
 *
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.isNonMarketable = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.mutate_is_non_marketable = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * The average galactic market price in credits.
 *
 * @returns {number}
 */
ettuschema.Commodity.prototype.averageCr = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Commodity.prototype.mutate_average_cr = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ettuschema.Commodity.startCommodity = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} commodityId
 */
ettuschema.Commodity.addCommodityId = function(builder, commodityId) {
  builder.addFieldInt64(0, commodityId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ettuschema.Commodity.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.CommodityType} categoryId
 */
ettuschema.Commodity.addCategoryId = function(builder, categoryId) {
  builder.addFieldInt8(2, categoryId, ettuschema.CommodityType.None);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isRare
 */
ettuschema.Commodity.addIsRare = function(builder, isRare) {
  builder.addFieldInt8(3, +isRare, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isNonMarketable
 */
ettuschema.Commodity.addIsNonMarketable = function(builder, isNonMarketable) {
  builder.addFieldInt8(4, +isNonMarketable, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} averageCr
 */
ettuschema.Commodity.addAverageCr = function(builder, averageCr) {
  builder.addFieldInt32(5, averageCr, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ettuschema.Commodity.endCommodity = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} commodityId
 * @param {flatbuffers.Offset} nameOffset
 * @param {NS15799260918407798990.ettuschema.CommodityType} categoryId
 * @param {boolean} isRare
 * @param {boolean} isNonMarketable
 * @param {number} averageCr
 * @returns {flatbuffers.Offset}
 */
ettuschema.Commodity.createCommodity = function(builder, commodityId, nameOffset, categoryId, isRare, isNonMarketable, averageCr) {
  ettuschema.Commodity.startCommodity(builder);
  ettuschema.Commodity.addCommodityId(builder, commodityId);
  ettuschema.Commodity.addName(builder, nameOffset);
  ettuschema.Commodity.addCategoryId(builder, categoryId);
  ettuschema.Commodity.addIsRare(builder, isRare);
  ettuschema.Commodity.addIsNonMarketable(builder, isNonMarketable);
  ettuschema.Commodity.addAverageCr(builder, averageCr);
  return ettuschema.Commodity.endCommodity(builder);
}

/**
 * Trade is a discrete entry for a Commodity that is or can be traded at with
 * a number of units and a value.
 *
 * @constructor
 */
ettuschema.Trade = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.Trade}
 */
ettuschema.Trade.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * Which commodity this descrbes.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Trade.prototype.commodityId = function() {
  return this.bb.readUint64(this.bb_pos);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Trade.prototype.mutate_commodity_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * How many units
 *
 * @returns {number}
 */
ettuschema.Trade.prototype.units = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Trade.prototype.mutate_units = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * How many credits
 *
 * @returns {number}
 */
ettuschema.Trade.prototype.credits = function() {
  return this.bb.readUint16(this.bb_pos + 12);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Trade.prototype.mutate_credits = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
};

/**
 * Unix timestamp UTC.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Trade.prototype.timestampUtc = function() {
  return this.bb.readUint64(this.bb_pos + 16);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Trade.prototype.mutate_timestamp_utc = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} commodity_id
 * @param {number} units
 * @param {number} credits
 * @param {flatbuffers.Long} timestamp_utc
 * @returns {flatbuffers.Offset}
 */
ettuschema.Trade.createTrade = function(builder, commodity_id, units, credits, timestamp_utc) {
  builder.prep(8, 24);
  builder.writeInt64(timestamp_utc);
  builder.pad(2);
  builder.writeInt16(credits);
  builder.writeInt32(units);
  builder.writeInt64(commodity_id);
  return builder.offset();
};

/**
 * @constructor
 */
ettuschema.FacilityListing = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.FacilityListing}
 */
ettuschema.FacilityListing.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.FacilityListing=} obj
 * @returns {ettuschema.FacilityListing}
 */
ettuschema.FacilityListing.getRootAsFacilityListing = function(bb, obj) {
  return (obj || new ettuschema.FacilityListing).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.FacilityListing=} obj
 * @returns {ettuschema.FacilityListing}
 */
ettuschema.FacilityListing.getSizePrefixedRootAsFacilityListing = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ettuschema.FacilityListing).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * Identifies the facility presenting these trades.
 *
 * @returns {number}
 */
ettuschema.FacilityListing.prototype.facilityId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.FacilityListing.prototype.mutate_facility_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * Commodities this facility sells.
 *
 * @param {number} index
 * @param {ettuschema.Trade=} obj
 * @returns {ettuschema.Trade}
 */
ettuschema.FacilityListing.prototype.supply = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ettuschema.Trade).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
ettuschema.FacilityListing.prototype.supplyLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * Commodities this facility buys.
 *
 * @param {number} index
 * @param {ettuschema.Trade=} obj
 * @returns {ettuschema.Trade}
 */
ettuschema.FacilityListing.prototype.demand = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new ettuschema.Trade).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
ettuschema.FacilityListing.prototype.demandLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ettuschema.FacilityListing.startFacilityListing = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} facilityId
 */
ettuschema.FacilityListing.addFacilityId = function(builder, facilityId) {
  builder.addFieldInt32(0, facilityId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} supplyOffset
 */
ettuschema.FacilityListing.addSupply = function(builder, supplyOffset) {
  builder.addFieldOffset(1, supplyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ettuschema.FacilityListing.startSupplyVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} demandOffset
 */
ettuschema.FacilityListing.addDemand = function(builder, demandOffset) {
  builder.addFieldOffset(2, demandOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ettuschema.FacilityListing.startDemandVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ettuschema.FacilityListing.endFacilityListing = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} facilityId
 * @param {flatbuffers.Offset} supplyOffset
 * @param {flatbuffers.Offset} demandOffset
 * @returns {flatbuffers.Offset}
 */
ettuschema.FacilityListing.createFacilityListing = function(builder, facilityId, supplyOffset, demandOffset) {
  ettuschema.FacilityListing.startFacilityListing(builder);
  ettuschema.FacilityListing.addFacilityId(builder, facilityId);
  ettuschema.FacilityListing.addSupply(builder, supplyOffset);
  ettuschema.FacilityListing.addDemand(builder, demandOffset);
  return ettuschema.FacilityListing.endFacilityListing(builder);
}

/**
 * Facility represents a static, dockable entity within the game such as a station or planetary base.
 * Instead of assigning stations their own unique IDs, we produce an fnv1a_32 hash of the system name
 * and the station name.
 *
 * @constructor
 */
ettuschema.Facility = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.Facility}
 */
ettuschema.Facility.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Facility=} obj
 * @returns {ettuschema.Facility}
 */
ettuschema.Facility.getRootAsFacility = function(bb, obj) {
  return (obj || new ettuschema.Facility).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Facility=} obj
 * @returns {ettuschema.Facility}
 */
ettuschema.Facility.getSizePrefixedRootAsFacility = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ettuschema.Facility).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * "{upper system name}@{facility name upper}"
 *
 * @returns {number}
 */
ettuschema.Facility.prototype.facilityId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_facility_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * Hash of the all-upper name of the system.
 *
 * @returns {number}
 */
ettuschema.Facility.prototype.systemId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_system_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * Name of the facility itself.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Facility.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * Unix timestamp UTC of last update.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Facility.prototype.timestampUtc = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_timestamp_utc = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * Optional facility type.
 *
 * @returns {ettuschema.FacilityType}
 */
ettuschema.Facility.prototype.facilityType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {ettuschema.FacilityType} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.FacilityType.None;
};

/**
 * @param {ettuschema.FacilityType} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_facility_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Does it have an accessible trade market.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasMarket = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_market = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Does it have a black market.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasBlackMarket = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_black_market = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Can it refuel.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasRefuel = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_refuel = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 18);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Can it repair.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasRepair = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_repair = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Can it re-arm.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasRearm = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_rearm = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 22);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Does it sell/upgrade ship components.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasOutfitting = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_outfitting = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 24);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Can you buy ships here.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasShipyard = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_shipyard = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 26);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Can you dock here (this is taken from EDDB and might be redundant).
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasDocking = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_docking = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 28);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Does the market have regular trading commodities available.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.hasCommodities = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_has_commodities = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 30);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Is it on a planet.
 *
 * @returns {boolean}
 */
ettuschema.Facility.prototype.isPlanetary = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_is_planetary = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 32);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Distance from the facility to the entry point in the system.
 *
 * @returns {number}
 */
ettuschema.Facility.prototype.lsToStar = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_ls_to_star = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 34);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * The governance of this station. If not present, assume system's government.
 *
 * @returns {ettuschema.Government}
 */
ettuschema.Facility.prototype.government = function() {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? /** @type {ettuschema.Government} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.Government.Corporate;
};

/**
 * @param {ettuschema.Government} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_government = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 36);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * The allegiance of this station. If not present, assume system's allegiance.
 *
 * @returns {ettuschema.Allegiance}
 */
ettuschema.Facility.prototype.allegiance = function() {
  var offset = this.bb.__offset(this.bb_pos, 38);
  return offset ? /** @type {ettuschema.Allegiance} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.Allegiance.Independent;
};

/**
 * @param {ettuschema.Allegiance} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_allegiance = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 38);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Presumably the internal ED identifier for the market here.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Facility.prototype.edMarketId = function() {
  var offset = this.bb.__offset(this.bb_pos, 40);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Facility.prototype.mutate_ed_market_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 40);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ettuschema.Facility.startFacility = function(builder) {
  builder.startObject(19);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} facilityId
 */
ettuschema.Facility.addFacilityId = function(builder, facilityId) {
  builder.addFieldInt32(0, facilityId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} systemId
 */
ettuschema.Facility.addSystemId = function(builder, systemId) {
  builder.addFieldInt32(1, systemId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ettuschema.Facility.addName = function(builder, nameOffset) {
  builder.addFieldOffset(2, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timestampUtc
 */
ettuschema.Facility.addTimestampUtc = function(builder, timestampUtc) {
  builder.addFieldInt64(3, timestampUtc, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.FacilityType} facilityType
 */
ettuschema.Facility.addFacilityType = function(builder, facilityType) {
  builder.addFieldInt8(4, facilityType, ettuschema.FacilityType.None);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasMarket
 */
ettuschema.Facility.addHasMarket = function(builder, hasMarket) {
  builder.addFieldInt8(5, +hasMarket, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasBlackMarket
 */
ettuschema.Facility.addHasBlackMarket = function(builder, hasBlackMarket) {
  builder.addFieldInt8(6, +hasBlackMarket, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasRefuel
 */
ettuschema.Facility.addHasRefuel = function(builder, hasRefuel) {
  builder.addFieldInt8(7, +hasRefuel, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasRepair
 */
ettuschema.Facility.addHasRepair = function(builder, hasRepair) {
  builder.addFieldInt8(8, +hasRepair, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasRearm
 */
ettuschema.Facility.addHasRearm = function(builder, hasRearm) {
  builder.addFieldInt8(9, +hasRearm, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasOutfitting
 */
ettuschema.Facility.addHasOutfitting = function(builder, hasOutfitting) {
  builder.addFieldInt8(10, +hasOutfitting, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasShipyard
 */
ettuschema.Facility.addHasShipyard = function(builder, hasShipyard) {
  builder.addFieldInt8(11, +hasShipyard, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasDocking
 */
ettuschema.Facility.addHasDocking = function(builder, hasDocking) {
  builder.addFieldInt8(12, +hasDocking, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasCommodities
 */
ettuschema.Facility.addHasCommodities = function(builder, hasCommodities) {
  builder.addFieldInt8(13, +hasCommodities, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isPlanetary
 */
ettuschema.Facility.addIsPlanetary = function(builder, isPlanetary) {
  builder.addFieldInt8(14, +isPlanetary, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lsToStar
 */
ettuschema.Facility.addLsToStar = function(builder, lsToStar) {
  builder.addFieldInt32(15, lsToStar, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.Government} government
 */
ettuschema.Facility.addGovernment = function(builder, government) {
  builder.addFieldInt8(16, government, ettuschema.Government.Corporate);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.Allegiance} allegiance
 */
ettuschema.Facility.addAllegiance = function(builder, allegiance) {
  builder.addFieldInt8(17, allegiance, ettuschema.Allegiance.Independent);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} edMarketId
 */
ettuschema.Facility.addEdMarketId = function(builder, edMarketId) {
  builder.addFieldInt64(18, edMarketId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ettuschema.Facility.endFacility = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} facilityId
 * @param {number} systemId
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Long} timestampUtc
 * @param {NS15799260918407798990.ettuschema.FacilityType} facilityType
 * @param {boolean} hasMarket
 * @param {boolean} hasBlackMarket
 * @param {boolean} hasRefuel
 * @param {boolean} hasRepair
 * @param {boolean} hasRearm
 * @param {boolean} hasOutfitting
 * @param {boolean} hasShipyard
 * @param {boolean} hasDocking
 * @param {boolean} hasCommodities
 * @param {boolean} isPlanetary
 * @param {number} lsToStar
 * @param {NS15799260918407798990.ettuschema.Government} government
 * @param {NS15799260918407798990.ettuschema.Allegiance} allegiance
 * @param {flatbuffers.Long} edMarketId
 * @returns {flatbuffers.Offset}
 */
ettuschema.Facility.createFacility = function(builder, facilityId, systemId, nameOffset, timestampUtc, facilityType, hasMarket, hasBlackMarket, hasRefuel, hasRepair, hasRearm, hasOutfitting, hasShipyard, hasDocking, hasCommodities, isPlanetary, lsToStar, government, allegiance, edMarketId) {
  ettuschema.Facility.startFacility(builder);
  ettuschema.Facility.addFacilityId(builder, facilityId);
  ettuschema.Facility.addSystemId(builder, systemId);
  ettuschema.Facility.addName(builder, nameOffset);
  ettuschema.Facility.addTimestampUtc(builder, timestampUtc);
  ettuschema.Facility.addFacilityType(builder, facilityType);
  ettuschema.Facility.addHasMarket(builder, hasMarket);
  ettuschema.Facility.addHasBlackMarket(builder, hasBlackMarket);
  ettuschema.Facility.addHasRefuel(builder, hasRefuel);
  ettuschema.Facility.addHasRepair(builder, hasRepair);
  ettuschema.Facility.addHasRearm(builder, hasRearm);
  ettuschema.Facility.addHasOutfitting(builder, hasOutfitting);
  ettuschema.Facility.addHasShipyard(builder, hasShipyard);
  ettuschema.Facility.addHasDocking(builder, hasDocking);
  ettuschema.Facility.addHasCommodities(builder, hasCommodities);
  ettuschema.Facility.addIsPlanetary(builder, isPlanetary);
  ettuschema.Facility.addLsToStar(builder, lsToStar);
  ettuschema.Facility.addGovernment(builder, government);
  ettuschema.Facility.addAllegiance(builder, allegiance);
  ettuschema.Facility.addEdMarketId(builder, edMarketId);
  return ettuschema.Facility.endFacility(builder);
}

/**
 * Galactic coordinate for a system.
 *
 * @constructor
 */
ettuschema.Coordinate = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.Coordinate}
 */
ettuschema.Coordinate.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
ettuschema.Coordinate.prototype.x = function() {
  return this.bb.readFloat64(this.bb_pos);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Coordinate.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 0);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
ettuschema.Coordinate.prototype.y = function() {
  return this.bb.readFloat64(this.bb_pos + 8);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Coordinate.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
ettuschema.Coordinate.prototype.z = function() {
  return this.bb.readFloat64(this.bb_pos + 16);
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.Coordinate.prototype.mutate_z = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
ettuschema.Coordinate.createCoordinate = function(builder, x, y, z) {
  builder.prep(8, 24);
  builder.writeFloat64(z);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

/**
 * System corresponds to an individual Elite-Dangerous star system, akin to a map.
 *
 * @constructor
 */
ettuschema.System = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.System}
 */
ettuschema.System.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.System=} obj
 * @returns {ettuschema.System}
 */
ettuschema.System.getRootAsSystem = function(bb, obj) {
  return (obj || new ettuschema.System).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.System=} obj
 * @returns {ettuschema.System}
 */
ettuschema.System.getSizePrefixedRootAsSystem = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ettuschema.System).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * System ID is it's upper-cased name hashed via fnv1a.
 *
 * @returns {number}
 */
ettuschema.System.prototype.systemId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_system_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * Unique name of the system.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.System.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * Position in the galaxy.
 *
 * @param {ettuschema.Coordinate=} obj
 * @returns {ettuschema.Coordinate|null}
 */
ettuschema.System.prototype.position = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new ettuschema.Coordinate).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * Timestamp of the last update to this entry UTC.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.System.prototype.timestampUtc = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_timestamp_utc = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.System.prototype.power = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * Whether anyone lives here.
 *
 * @returns {boolean}
 */
ettuschema.System.prototype.populated = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_populated = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Whether a permit is required to enter the systme.
 *
 * @returns {boolean}
 */
ettuschema.System.prototype.needsPermit = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_needs_permit = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Law-Enforcement level of the system.
 *
 * @returns {ettuschema.SecurityLevel}
 */
ettuschema.System.prototype.security = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? /** @type {ettuschema.SecurityLevel} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.SecurityLevel.Medium;
};

/**
 * @param {ettuschema.SecurityLevel} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_security = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 18);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * What is the government for the system.
 *
 * @returns {ettuschema.Government}
 */
ettuschema.System.prototype.governmentId = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? /** @type {ettuschema.Government} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.Government.Corporate;
};

/**
 * @param {ettuschema.Government} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_government_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 20);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Which faction is the system allied to.
 *
 * @returns {ettuschema.Allegiance}
 */
ettuschema.System.prototype.allegianceId = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {ettuschema.Allegiance} */ (this.bb.readInt8(this.bb_pos + offset)) : ettuschema.Allegiance.Independent;
};

/**
 * @param {ettuschema.Allegiance} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_allegiance_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 22);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * Guess: Elite Dangerous Internal ID
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.System.prototype.edAddress = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.System.prototype.mutate_ed_address = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 24);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * Facilities in this system.
 *
 * @param {number} index
 * @param {ettuschema.Facility=} obj
 * @returns {ettuschema.Facility}
 */
ettuschema.System.prototype.facilities = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? (obj || new ettuschema.Facility).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ettuschema.System.prototype.facilitiesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ettuschema.System.startSystem = function(builder) {
  builder.startObject(12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} systemId
 */
ettuschema.System.addSystemId = function(builder, systemId) {
  builder.addFieldInt32(0, systemId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ettuschema.System.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionOffset
 */
ettuschema.System.addPosition = function(builder, positionOffset) {
  builder.addFieldStruct(2, positionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timestampUtc
 */
ettuschema.System.addTimestampUtc = function(builder, timestampUtc) {
  builder.addFieldInt64(3, timestampUtc, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} powerOffset
 */
ettuschema.System.addPower = function(builder, powerOffset) {
  builder.addFieldOffset(4, powerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} populated
 */
ettuschema.System.addPopulated = function(builder, populated) {
  builder.addFieldInt8(5, +populated, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} needsPermit
 */
ettuschema.System.addNeedsPermit = function(builder, needsPermit) {
  builder.addFieldInt8(6, +needsPermit, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.SecurityLevel} security
 */
ettuschema.System.addSecurity = function(builder, security) {
  builder.addFieldInt8(7, security, ettuschema.SecurityLevel.Medium);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.Government} governmentId
 */
ettuschema.System.addGovernmentId = function(builder, governmentId) {
  builder.addFieldInt8(8, governmentId, ettuschema.Government.Corporate);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ettuschema.Allegiance} allegianceId
 */
ettuschema.System.addAllegianceId = function(builder, allegianceId) {
  builder.addFieldInt8(9, allegianceId, ettuschema.Allegiance.Independent);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} edAddress
 */
ettuschema.System.addEdAddress = function(builder, edAddress) {
  builder.addFieldInt64(10, edAddress, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} facilitiesOffset
 */
ettuschema.System.addFacilities = function(builder, facilitiesOffset) {
  builder.addFieldOffset(11, facilitiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ettuschema.System.createFacilitiesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ettuschema.System.startFacilitiesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ettuschema.System.endSystem = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} systemId
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} positionOffset
 * @param {flatbuffers.Long} timestampUtc
 * @param {flatbuffers.Offset} powerOffset
 * @param {boolean} populated
 * @param {boolean} needsPermit
 * @param {NS15799260918407798990.ettuschema.SecurityLevel} security
 * @param {NS15799260918407798990.ettuschema.Government} governmentId
 * @param {NS15799260918407798990.ettuschema.Allegiance} allegianceId
 * @param {flatbuffers.Long} edAddress
 * @param {flatbuffers.Offset} facilitiesOffset
 * @returns {flatbuffers.Offset}
 */
ettuschema.System.createSystem = function(builder, systemId, nameOffset, positionOffset, timestampUtc, powerOffset, populated, needsPermit, security, governmentId, allegianceId, edAddress, facilitiesOffset) {
  ettuschema.System.startSystem(builder);
  ettuschema.System.addSystemId(builder, systemId);
  ettuschema.System.addName(builder, nameOffset);
  ettuschema.System.addPosition(builder, positionOffset);
  ettuschema.System.addTimestampUtc(builder, timestampUtc);
  ettuschema.System.addPower(builder, powerOffset);
  ettuschema.System.addPopulated(builder, populated);
  ettuschema.System.addNeedsPermit(builder, needsPermit);
  ettuschema.System.addSecurity(builder, security);
  ettuschema.System.addGovernmentId(builder, governmentId);
  ettuschema.System.addAllegianceId(builder, allegianceId);
  ettuschema.System.addEdAddress(builder, edAddress);
  ettuschema.System.addFacilities(builder, facilitiesOffset);
  return ettuschema.System.endSystem(builder);
}

/**
 * Encapsulation of all the data.
 *
 * @constructor
 */
ettuschema.Galaxy = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ettuschema.Galaxy}
 */
ettuschema.Galaxy.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Galaxy=} obj
 * @returns {ettuschema.Galaxy}
 */
ettuschema.Galaxy.getRootAsGalaxy = function(bb, obj) {
  return (obj || new ettuschema.Galaxy).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ettuschema.Galaxy=} obj
 * @returns {ettuschema.Galaxy}
 */
ettuschema.Galaxy.getSizePrefixedRootAsGalaxy = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ettuschema.Galaxy).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
ettuschema.Galaxy.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('gomd');
};

/**
 * Semantically-versioned schema id.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.schemaVersion = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * Human-friendly description of what is enclosed, e.g "import from source X" or
 * "complete local database". Entirely descriptive.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * Human-friendly attributition, if relevant.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.attribution = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * UTC Unix time of generation.
 *
 * @returns {flatbuffers.Long}
 */
ettuschema.Galaxy.prototype.timestampUtc = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
ettuschema.Galaxy.prototype.mutate_timestamp_utc = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
};

/**
 * Items recognized by this data.
 *
 * @param {number} index
 * @param {ettuschema.Commodity=} obj
 * @returns {ettuschema.Commodity}
 */
ettuschema.Galaxy.prototype.commodities = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new ettuschema.Commodity).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ettuschema.Galaxy.prototype.commoditiesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * Systems recognized by this data (presence of facilities optional).
 *
 * @param {number} index
 * @param {ettuschema.System=} obj
 * @returns {ettuschema.System}
 */
ettuschema.Galaxy.prototype.systems = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new ettuschema.System).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ettuschema.Galaxy.prototype.systemsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * Fields reserved for any user-specific notes.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.userData = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * 3rd-party application values that prefer .ini format.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.iniData = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * 3rd-party application values that prefer .json format.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.jsonData = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * 3rd-party application values that prefer .yaml because they hate life.
 *
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ettuschema.Galaxy.prototype.yamlData = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ettuschema.Galaxy.startGalaxy = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} schemaVersionOffset
 */
ettuschema.Galaxy.addSchemaVersion = function(builder, schemaVersionOffset) {
  builder.addFieldOffset(0, schemaVersionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptionOffset
 */
ettuschema.Galaxy.addDescription = function(builder, descriptionOffset) {
  builder.addFieldOffset(1, descriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} attributionOffset
 */
ettuschema.Galaxy.addAttribution = function(builder, attributionOffset) {
  builder.addFieldOffset(2, attributionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timestampUtc
 */
ettuschema.Galaxy.addTimestampUtc = function(builder, timestampUtc) {
  builder.addFieldInt64(3, timestampUtc, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} commoditiesOffset
 */
ettuschema.Galaxy.addCommodities = function(builder, commoditiesOffset) {
  builder.addFieldOffset(4, commoditiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ettuschema.Galaxy.createCommoditiesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ettuschema.Galaxy.startCommoditiesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} systemsOffset
 */
ettuschema.Galaxy.addSystems = function(builder, systemsOffset) {
  builder.addFieldOffset(5, systemsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ettuschema.Galaxy.createSystemsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ettuschema.Galaxy.startSystemsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} userDataOffset
 */
ettuschema.Galaxy.addUserData = function(builder, userDataOffset) {
  builder.addFieldOffset(6, userDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} iniDataOffset
 */
ettuschema.Galaxy.addIniData = function(builder, iniDataOffset) {
  builder.addFieldOffset(7, iniDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} jsonDataOffset
 */
ettuschema.Galaxy.addJsonData = function(builder, jsonDataOffset) {
  builder.addFieldOffset(8, jsonDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} yamlDataOffset
 */
ettuschema.Galaxy.addYamlData = function(builder, yamlDataOffset) {
  builder.addFieldOffset(9, yamlDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ettuschema.Galaxy.endGalaxy = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ettuschema.Galaxy.finishGalaxyBuffer = function(builder, offset) {
  builder.finish(offset, 'gomd');
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ettuschema.Galaxy.finishSizePrefixedGalaxyBuffer = function(builder, offset) {
  builder.finish(offset, 'gomd', true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} schemaVersionOffset
 * @param {flatbuffers.Offset} descriptionOffset
 * @param {flatbuffers.Offset} attributionOffset
 * @param {flatbuffers.Long} timestampUtc
 * @param {flatbuffers.Offset} commoditiesOffset
 * @param {flatbuffers.Offset} systemsOffset
 * @param {flatbuffers.Offset} userDataOffset
 * @param {flatbuffers.Offset} iniDataOffset
 * @param {flatbuffers.Offset} jsonDataOffset
 * @param {flatbuffers.Offset} yamlDataOffset
 * @returns {flatbuffers.Offset}
 */
ettuschema.Galaxy.createGalaxy = function(builder, schemaVersionOffset, descriptionOffset, attributionOffset, timestampUtc, commoditiesOffset, systemsOffset, userDataOffset, iniDataOffset, jsonDataOffset, yamlDataOffset) {
  ettuschema.Galaxy.startGalaxy(builder);
  ettuschema.Galaxy.addSchemaVersion(builder, schemaVersionOffset);
  ettuschema.Galaxy.addDescription(builder, descriptionOffset);
  ettuschema.Galaxy.addAttribution(builder, attributionOffset);
  ettuschema.Galaxy.addTimestampUtc(builder, timestampUtc);
  ettuschema.Galaxy.addCommodities(builder, commoditiesOffset);
  ettuschema.Galaxy.addSystems(builder, systemsOffset);
  ettuschema.Galaxy.addUserData(builder, userDataOffset);
  ettuschema.Galaxy.addIniData(builder, iniDataOffset);
  ettuschema.Galaxy.addJsonData(builder, jsonDataOffset);
  ettuschema.Galaxy.addYamlData(builder, yamlDataOffset);
  return ettuschema.Galaxy.endGalaxy(builder);
}

// Exports for Node.js and RequireJS
this.ettuschema = ettuschema;
